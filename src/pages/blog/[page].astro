---
import BlogCard from "@/components/BlogCard.astro";
import Layout from "@/layouts/Layout.astro";
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import { getEntry } from "astro:content";

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  const pages = await getCollection("blog");

  const allPages: {
    page: string;
  }[] = pages.map((page) => ({
    page: page.slug,
  }));
  return paginate(allPages);
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const blogs = await Promise.all(
  page.data.map(async (page) => {
    return await getEntry("blog", page.page ?? "");
  }),
);

const sortedBlogs = blogs.sort((a, b) => {
  if (!a || !b) {
    return 0;
  }
  return b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
});
---

<Layout title={`Blog`}>
  <h2 class="text-2xl font-bold" transition:name="main title">Blog</h2>
  <div class="h-2 w-full"></div>
  <a href="/blog/tags">See all tags</a>
  <div class="h-[24px] w-full"></div>
  <hr />
  <div class="h-[24px] w-full"></div>
  <ul class="not-prose grid grid-cols-1 gap-4">
    {sortedBlogs.map((blog) => <li>{blog && <BlogCard {blog} />}</li>)}
  </ul>

  <div class="h-[24px] w-full"></div>
  {page.url.prev && page.url.next && <hr />}
  <div class="h-[24px] w-full"></div>
  <div class="flex justify-between">
    {
      page.url.prev ? (
        <a href={page.url.prev} class="hover:underline underline-offset-2">
          Previous
        </a>
      ) : null
    }
    {
      page.url.next ? (
        <a href={page.url.next} class="hover:underline underline-offset-2">
          Next
        </a>
      ) : null
    }
  </div>
</Layout>
